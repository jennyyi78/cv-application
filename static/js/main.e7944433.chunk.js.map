{"version":3,"sources":["components/GeneralInfo.js","components/EducationInfo.js","components/SkillsInfo.js","components/ExperienceInfo.js","components/CVForm.js","App.js","index.js"],"names":["GeneralInfo","props","generalInfo","className","firstName","lastName","email","phoneNumber","EducationInfo","totalEducation","length","map","educationInfo","schoolName","schoolDateFrom","schoolDateTo","schoolDegree","schoolMajor","GPA","index","SkillsInfo","totalSkills","skill","skillText","ExperienceInfo","totalExperience","experienceInfo","companyName","workDateFrom","workDateTo","positionTitle","tasks","task","taskText","Form","handleChange","event","state","target","getAttribute","id","value","setState","find","skillInfo","experience","taskIndex","taskInfo","createAdditionalForm","uniqid","newForm","concat","newSkill","newTask","deleteForm","classList","filter","printResume","window","print","enterToSubmit","keyCode","blur","this","onSubmit","onSubmitTask","htmlFor","onBlur","defaultValue","type","onKeyDown","data-index","onClick","data-task-index","Component","App","CVForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7944433.chunk.js","sourcesContent":["import React from 'react';\n\nconst GeneralInfo = (props) => {\n  const { generalInfo } = props;\n  return (\n    <div className=\"general-info\">\n      <div className=\"name-header\">\n        {generalInfo.firstName}\n        {' '}\n        {generalInfo.lastName}\n      </div>\n\n      <div className=\"info-header\">\n        {generalInfo.email}\n        {' \\u2022 '}\n        {generalInfo.phoneNumber}\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralInfo;\n","import React from 'react';\n\nconst EducationInfo = (props) => {\n  const { totalEducation } = props;\n  if (totalEducation.length === 0) {\n    return (<div />);\n  }\n  return (\n    <div className=\"education-info\">\n      <div className=\"section-title\">Education</div>\n      {totalEducation.map((educationInfo) => (\n        <div key={educationInfo.index} className=\"education-container\">\n          <div className=\"entry-title-container\">\n            <p className=\"title-text\">\n              {educationInfo.schoolName}\n            </p>\n            <p className=\"date-title\">\n              {educationInfo.schoolDateFrom}\n              {' '}\n              &mdash;\n\n              {' '}\n              {educationInfo.schoolDateTo}\n              {' '}\n            </p>\n          </div>\n          <p>\n            {educationInfo.schoolDegree}\n          </p>\n          <p>\n            Major:\n            {' '}\n            {educationInfo.schoolMajor}\n          </p>\n          <p>\n            GPA:\n            {' '}\n            {educationInfo.GPA}\n          </p>\n        </div>\n      ))}\n\n    </div>\n  );\n};\n\nexport default EducationInfo;\n","import React from 'react';\n\nconst SkillsInfo = (props) => {\n  const { totalSkills } = props;\n  if (totalSkills.length === 0) {\n    return (<div />);\n  }\n  return (\n    <div className=\"skills-info\">\n      <div className=\"section-title\">Skills</div>\n      <ul>\n        {totalSkills.map((skill) => (\n          <li key={skill.index}>{skill.skillText}</li>\n        ))}\n      </ul>\n    </div>\n\n  );\n};\n\nexport default SkillsInfo;\n","import React from 'react';\n\nconst ExperienceInfo = (props) => {\n  const { totalExperience } = props;\n  if (totalExperience.length === 0) {\n    return (<div />);\n  }\n  return (\n    <div className=\"experience-info\">\n      <div className=\"section-title\">Experience</div>\n      {totalExperience.map((experienceInfo) => (\n        <div key={experienceInfo.index} className=\"experience-container\">\n          <div className=\"entry-title-container\">\n            <p className=\"title-text\">\n              {experienceInfo.companyName}\n            </p>\n            <p className=\"date-title\">\n              {experienceInfo.workDateFrom}\n              {' '}\n              &mdash;\n              {' '}\n              {experienceInfo.workDateTo}\n              {' '}\n\n            </p>\n          </div>\n          <p>\n            {experienceInfo.positionTitle}\n          </p>\n          <ul>\n            {experienceInfo.tasks.map((task) => <li key={task.index}>{task.taskText}</li>)}\n          </ul>\n        </div>\n      ))}\n\n    </div>\n  );\n};\n\nexport default ExperienceInfo;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport GeneralInfo from './GeneralInfo';\nimport EducationInfo from './EducationInfo';\nimport SkillsInfo from './SkillsInfo';\nimport ExperienceInfo from './ExperienceInfo';\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n\n      generalInfo: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNumber: '',\n      },\n\n      totalEducation: [{\n\n        index: uniqid(),\n        schoolName: '',\n        schoolDateFrom: '',\n        schoolDateTo: '',\n        schoolDegree: '',\n        schoolMajor: '',\n        GPA: '',\n\n      }],\n\n      totalSkills: [{ index: uniqid(), skillText: '' }],\n\n      totalExperience: [{\n        index: uniqid(),\n        companyName: '',\n        positionTitle: '',\n        workDateFrom: '',\n        workDateTo: '',\n        tasks: [{ index: uniqid(), taskText: '' }],\n      }],\n\n    };\n  }\n\n  handleChange = (event) => {\n    const {\n      generalInfo, totalEducation, totalExperience, totalSkills,\n    } = this.state;\n    const index = event.target.getAttribute('data-index');\n    switch (event.target.className) {\n      case 'general-info-input': {\n        generalInfo[event.target.id] = event.target.value;\n        this.setState({ generalInfo });\n        break;\n      }\n      case 'education-info-input': {\n        const education = totalEducation.find((educationInfo) => educationInfo.index === index);\n        education[event.target.id] = event.target.value;\n        this.setState({ totalEducation });\n        break;\n      }\n\n      case 'skills-info-input': {\n        const skill = totalSkills.find((skillInfo) => skillInfo.index === index);\n\n        skill.skillText = event.target.value;\n\n        this.setState({ totalSkills });\n        break;\n      }\n      case 'experience-info-input': {\n        const experience = totalExperience.find((experienceInfo) => experienceInfo.index === index);\n        experience[event.target.id] = event.target.value;\n        this.setState({ totalExperience });\n        break;\n      }\n\n      case 'tasks-info-input': {\n        const experience = totalExperience.find((experienceInfo) => experienceInfo.index === index);\n\n        const taskIndex = event.target.getAttribute('data-task-index');\n        const task = experience.tasks.find((taskInfo) => taskInfo.index === taskIndex);\n        task.taskText = event.target.value;\n\n        this.setState({ totalExperience });\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  createAdditionalForm = (event) => {\n    const {\n      totalEducation, totalExperience, totalSkills,\n    } = this.state;\n\n    const id = uniqid();\n\n    switch (event.target.className) {\n      case 'add-education-info': {\n        const newForm = {\n\n          index: id,\n          schoolName: '',\n          schoolDateFrom: '',\n          schoolDateTo: '',\n          schoolDegree: '',\n          schoolMajor: '',\n          GPA: '',\n\n        };\n\n        this.setState({\n          totalEducation: totalEducation.concat(newForm),\n        });\n        break;\n      }\n\n      case 'add-skill': {\n        const newSkill = {\n\n          index: id,\n          skillText: '',\n\n        };\n\n        this.setState({\n          totalSkills: totalSkills.concat(newSkill),\n        });\n        break;\n      }\n      case 'add-experience-info': {\n        const newForm = {\n\n          index: uniqid(),\n          companyName: '',\n          positionTitle: '',\n          workDateFrom: '',\n          workDateTo: '',\n          tasks: [{ index: uniqid(), taskText: '' }],\n\n        };\n\n        this.setState({\n          totalExperience: totalExperience.concat(newForm),\n        });\n        break;\n      }\n\n      case 'add-task': {\n        const newTask = {\n\n          index: id,\n          taskText: '',\n\n        };\n\n        const experience = totalExperience.find(\n          (experienceInfo) => experienceInfo.index === event.target.getAttribute('data-index'),\n        );\n        experience.tasks = experience.tasks.concat(newTask);\n        this.setState({\n          totalExperience,\n        });\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  deleteForm = (event) => {\n    const { totalEducation, totalExperience, totalSkills } = this.state;\n\n    switch (event.target.classList[0]) {\n      case 'delete-education-info': {\n        this.setState({\n          totalEducation: totalEducation.filter((educationInfo) => educationInfo.index !== event.target.getAttribute('data-index')),\n        });\n        break;\n      }\n\n      case 'delete-skills-info': {\n        this.setState({\n          totalSkills: totalSkills.filter((skillInfo) => skillInfo.index !== event.target.getAttribute('data-index')),\n        });\n        break;\n      }\n\n      case 'delete-experience-info': {\n        this.setState({\n          totalExperience: totalExperience.filter((experienceInfo) => experienceInfo.index !== event.target.getAttribute('data-index')),\n        });\n        break;\n      }\n      case 'delete-tasks-info': {\n        const experience = totalExperience.find(\n          (experienceInfo) => experienceInfo.index === event.target.getAttribute('data-index'),\n        );\n        experience.tasks = experience.tasks.filter((task) => task.index !== event.target.getAttribute('data-task-index'));\n        this.setState({\n          totalExperience,\n        });\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  printResume = () => {\n    window.print();\n  }\n\n  enterToSubmit = (event) => {\n    if (event.keyCode === 13) {\n      event.target.blur();\n    }\n  }\n\n  render() {\n    const {\n      generalInfo, totalEducation, totalSkills, totalExperience,\n    } = this.state;\n\n    return (\n      <div className=\"main-container\">\n        <div className=\"form-header\">\n          Resume Maker\n        </div>\n        <div className=\"sub-container\">\n          <div className=\"cv-form-container\">\n            <div className=\"form-section-title\">\n              General Information\n            </div>\n            <br />\n            <form className=\"general-info-form\" onSubmit={this.onSubmitTask}>\n              <label htmlFor=\"firstName\">\n                First Name\n                <input\n                  onBlur={this.handleChange}\n                  defaultValue={generalInfo.firstName}\n                  type=\"text\"\n                  id=\"firstName\"\n                  className=\"general-info-input\"\n                  onKeyDown={this.enterToSubmit}\n                />\n              </label>\n              <label htmlFor=\"lastName\">\n                Last Name\n                <input\n                  onBlur={this.handleChange}\n                  defaultValue={generalInfo.lastName}\n                  type=\"text\"\n                  id=\"lastName\"\n                  className=\"general-info-input\"\n                  onKeyDown={this.enterToSubmit}\n                />\n              </label>\n\n              <label htmlFor=\"email\">\n                Email Address\n                <input\n                  onBlur={this.handleChange}\n                  defaultValue={generalInfo.email}\n                  type=\"text\"\n                  id=\"email\"\n                  className=\"general-info-input\"\n                  onKeyDown={this.enterToSubmit}\n                />\n              </label>\n\n              <label htmlFor=\"phoneNumber\">\n                Phone Number\n                <input\n                  onBlur={this.handleChange}\n                  defaultValue={generalInfo.phoneNumber}\n                  type=\"tel\"\n                  id=\"phoneNumber\"\n                  className=\"general-info-input\"\n                  onKeyDown={this.enterToSubmit}\n                />\n              </label>\n\n            </form>\n\n            <div className=\"form-section-title\">\n              Education\n            </div>\n            <br />\n\n            {totalEducation.map((educationInfo) => (\n              <div key={educationInfo.index}>\n                <form className=\"education-info-form\" onSubmit={this.onSubmitTask}>\n                  <label htmlFor=\"schoolName\">\n                    School Name\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={educationInfo.schoolName}\n                      type=\"text\"\n                      id=\"schoolName\"\n                      className=\"education-info-input\"\n                      data-index={educationInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                  <label htmlFor=\"schoolDateFrom\">\n                    Starting Date\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={educationInfo.schoolDateFrom}\n                      type=\"date\"\n                      id=\"schoolDateFrom\"\n                      className=\"education-info-input\"\n                      data-index={educationInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                  <label htmlFor=\"schoolDateTo\">\n                    Ending Date\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={educationInfo.schoolDateTo}\n                      type=\"date\"\n                      id=\"schoolDateTo\"\n                      className=\"education-info-input\"\n                      data-index={educationInfo.index}\n                    />\n                  </label>\n\n                  <label htmlFor=\"schoolDegree\">\n                    Degree Achieved\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={educationInfo.schoolDegree}\n                      type=\"text\"\n                      id=\"schoolDegree\"\n                      className=\"education-info-input\"\n                      data-index={educationInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                  <label htmlFor=\"schoolMajor\">\n                    Study of Field\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={educationInfo.schoolMajor}\n                      type=\"text\"\n                      id=\"schoolMajor\"\n                      className=\"education-info-input\"\n                      data-index={educationInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                  <label htmlFor=\"GPA\">\n                    Grade Point Average\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={educationInfo.GPA}\n                      type=\"number\"\n                      id=\"GPA\"\n                      className=\"education-info-input\"\n                      data-index={educationInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                </form>\n                <button type=\"button\" data-index={educationInfo.index} className=\"delete-education-info\" onClick={this.deleteForm}>Delete Education</button>\n              </div>\n            ))}\n            <button type=\"button\" className=\"add-education-info\" onClick={this.createAdditionalForm}>Add New Education</button>\n\n            <div className=\"form-section-title\">\n              Skills\n            </div>\n            <br />\n            <form>\n              <label htmlFor=\"skills\">\n                {totalSkills.map((skill) => (\n                  <div key={skill.index}>\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={skill.skillText}\n                      type=\"text\"\n                      id=\"skills\"\n                      className=\"skills-info-input\"\n                      data-index={skill.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                    <button type=\"button\" id=\"skill\" data-index={skill.index} className=\"delete-skills-info delete-entry\" onClick={this.deleteForm}>\n                      &mdash;\n                    </button>\n                  </div>\n                ))}\n              </label>\n            </form>\n            <button type=\"button\" className=\"add-skill\" onClick={this.createAdditionalForm}>Add New Skill</button>\n\n            <div className=\"form-section-title\">\n              Experience\n            </div>\n            <br />\n            {totalExperience.map((experienceInfo) => (\n              <div key={experienceInfo.index}>\n                <form className=\"experience-info-form\" onSubmit={this.onSubmitTask}>\n                  <label htmlFor=\"companyName\">\n                    Company Name\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={experienceInfo.companyName}\n                      type=\"text\"\n                      id=\"companyName\"\n                      className=\"experience-info-input\"\n                      data-index={experienceInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                  <label htmlFor=\"workDateFrom\">\n                    Starting Date\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={experienceInfo.workDateFrom}\n                      type=\"date\"\n                      id=\"workDateFrom\"\n                      className=\"experience-info-input\"\n                      data-index={experienceInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                  <label htmlFor=\"workDateTo\">\n                    Ending Date\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={experienceInfo.workDateTo}\n                      type=\"date\"\n                      id=\"workDateTo\"\n                      className=\"experience-info-input\"\n                      data-index={experienceInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                  <label htmlFor=\"positionTitle\">\n                    Position Title\n                    <input\n                      onBlur={this.handleChange}\n                      defaultValue={experienceInfo.positionTitle}\n                      type=\"text\"\n                      id=\"positionTitle\"\n                      className=\"experience-info-input\"\n                      data-index={experienceInfo.index}\n                      onKeyDown={this.enterToSubmit}\n                    />\n                  </label>\n\n                  <div>\n                    <label htmlFor=\"tasks\">\n                      Tasks\n                      {experienceInfo.tasks.map((task) => (\n                        <div key={task.index}>\n                          <input\n                            onBlur={this.handleChange}\n                            defaultValue={task.taskText}\n                            type=\"text\"\n                            id=\"tasks\"\n                            className=\"tasks-info-input\"\n                            data-index={experienceInfo.index}\n                            data-task-index={task.index}\n                            onKeyDown={this.enterToSubmit}\n                          />\n                          <button type=\"button\" id=\"tasks\" data-index={experienceInfo.index} data-task-index={task.index} className=\"delete-tasks-info delete-entry\" onClick={this.deleteForm}>\n                            &mdash;\n                          </button>\n                        </div>\n\n                      ))}\n                    </label>\n                  </div>\n\n                </form>\n                <button type=\"button\" data-index={experienceInfo.index} className=\"add-task\" onClick={this.createAdditionalForm}>Add New Task</button>\n                <br />\n                <button type=\"button\" data-index={experienceInfo.index} className=\"delete-experience-info\" onClick={this.deleteForm}>Delete Experience</button>\n              </div>\n            ))}\n\n            <button type=\"button\" className=\"add-experience-info\" onClick={this.createAdditionalForm}>Add New Experience</button>\n\n          </div>\n          <div className=\"resume-container\">\n            <GeneralInfo generalInfo={generalInfo} />\n            <EducationInfo totalEducation={totalEducation} />\n            <SkillsInfo totalSkills={totalSkills} />\n            <ExperienceInfo totalExperience={totalExperience} />\n            <div><button type=\"button\" className=\"print-button\" onClick={this.printResume}>Print Resume</button></div>\n\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport CVForm from './components/CVForm';\nimport './styles/app.css';\n\nconst App = () => (\n  <CVForm />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}